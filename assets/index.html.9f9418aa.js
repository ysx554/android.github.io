import{_ as a,o as t,c as n,e as s}from"./app.2d594a2a.js";const e={},c=s(`<h1 id="contacts" tabindex="-1"><a class="header-anchor" href="#contacts" aria-hidden="true">#</a> Contacts</h1><h2 id="sets-contacts-listener" tabindex="-1"><a class="header-anchor" href="#sets-contacts-listener" aria-hidden="true">#</a> Sets contacts listener</h2><p>Set the contact listener, and the result is returned through the data stream contactEveStm, which is returned as a ContactListenBean object.</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>_blePlugin<span class="token punctuation">.</span>contactEveStm<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span>
        <span class="token punctuation">(</span><span class="token class-name">ContactListenBean</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">/// Do something with new state,for example:</span>
          <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">switch</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">case</span> <span class="token class-name">ContactListenType</span><span class="token punctuation">.</span>savedSuccess<span class="token punctuation">:</span>
                _savedSuccess <span class="token operator">=</span> event<span class="token punctuation">.</span>savedSuccess<span class="token operator">!</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
              <span class="token keyword">case</span> <span class="token class-name">ContactListenType</span><span class="token punctuation">.</span>savedFail<span class="token punctuation">:</span>
                _savedFail <span class="token operator">=</span> event<span class="token punctuation">.</span>savedFail<span class="token operator">!</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
              <span class="token keyword">default</span><span class="token punctuation">:</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Callback Description(event):</p><p>ContactListenBean:</p><table><thead><tr><th>callback value</th><th>callback value type</th><th>callback value description</th></tr></thead><tbody><tr><td>type</td><td>int</td><td>Get the corresponding return value according to type, where type is the value corresponding to ContactListenType.</td></tr><tr><td>savedSuccess</td><td>int</td><td>The return value of the success of saving the contact;</td></tr><tr><td>savedFail</td><td>int</td><td>The return value of the failure to save the contact</td></tr></tbody></table><p>ContactListenType\uFF1A</p><table><thead><tr><th>type</th><th>value</th><th>value description</th></tr></thead><tbody><tr><td>savedSuccess</td><td>1</td><td>Set contacts successfully</td></tr><tr><td>savedFail</td><td>2</td><td>Failed to set contacts</td></tr></tbody></table><h2 id="sets-contacts-with-avatar-listener" tabindex="-1"><a class="header-anchor" href="#sets-contacts-with-avatar-listener" aria-hidden="true">#</a> Sets contacts with avatar listener</h2><p>Sets the contact avatar listener, and the result is returned through the data stream contactAvatarEveStm, which is returned as a FileTransBean object.</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>_blePlugin<span class="token punctuation">.</span>contactAvatarEveStm<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span>
        <span class="token punctuation">(</span><span class="token class-name">FileTransBean</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">/// Do something with new state,for example:</span>
          <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">switch</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">case</span> <span class="token class-name">TransType</span><span class="token punctuation">.</span>transStart<span class="token punctuation">:</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
              <span class="token keyword">case</span> <span class="token class-name">TransType</span><span class="token punctuation">.</span>transChanged<span class="token punctuation">:</span>
                _progress <span class="token operator">=</span> event<span class="token punctuation">.</span>progress<span class="token operator">!</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
              <span class="token keyword">case</span> <span class="token class-name">TransType</span><span class="token punctuation">.</span>transCompleted<span class="token punctuation">:</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
              <span class="token keyword">case</span> <span class="token class-name">TransType</span><span class="token punctuation">.</span>error<span class="token punctuation">:</span>
                _error <span class="token operator">=</span> event<span class="token punctuation">.</span>error<span class="token operator">!</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
              <span class="token keyword">default</span><span class="token punctuation">:</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Callback Description(event):</p><p>FileTransBean:</p><table><thead><tr><th>callback value</th><th>callback value type</th><th>callback value description</th></tr></thead><tbody><tr><td>type</td><td>int</td><td>Get the corresponding return value according to type, where type is the value corresponding to TransType.</td></tr><tr><td>progress</td><td>int</td><td>set progress</td></tr><tr><td>error</td><td>int</td><td>error code</td></tr></tbody></table><p>TransType\uFF1A</p><table><thead><tr><th>type</th><th>value</th><th>value description</th></tr></thead><tbody><tr><td>transStart</td><td>1</td><td>Set a contact avatar to get started</td></tr><tr><td>transChanged</td><td>2</td><td>Set contact avatar progress changes</td></tr><tr><td>transCompleted</td><td>3</td><td>Set contact avatar successfully</td></tr><tr><td>error</td><td>4</td><td>Error setting contact avatar</td></tr></tbody></table><h2 id="check-support-contacts" tabindex="-1"><a class="header-anchor" href="#check-support-contacts" aria-hidden="true">#</a> Check support contacts</h2><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token class-name">ContactConfigBean</span> info <span class="token operator">=</span> <span class="token keyword">await</span> _blePlugin<span class="token punctuation">.</span>checkSupportQuickContact<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Callback Description:</p><p>ContactConfigBean\uFF1A</p><table><thead><tr><th>value</th><th>value type</th><th>value description</th></tr></thead><tbody><tr><td>supported</td><td>bool</td><td>Whether symbols are supported, such as \u201D+\u201C</td></tr><tr><td>count</td><td>int</td><td>Maximum number of contacts</td></tr><tr><td>width</td><td>int</td><td>The width of the contact avatar</td></tr><tr><td>height</td><td>int</td><td>The height of contact avatar</td></tr></tbody></table><h2 id="gets-current-contacts-count" tabindex="-1"><a class="header-anchor" href="#gets-current-contacts-count" aria-hidden="true">#</a> Gets current contacts count</h2><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>int contactCount <span class="token operator">=</span> _blePlugin<span class="token punctuation">.</span>queryContactCount<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="sets-contact-information" tabindex="-1"><a class="header-anchor" href="#sets-contact-information" aria-hidden="true">#</a> Sets contact information</h2><p>Sets the contact, the result is obtained through contactEveStm.</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>_blePlugin<span class="token punctuation">.</span><span class="token function">sendContact</span><span class="token punctuation">(</span><span class="token class-name">ContactBean</span> info<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Parameter Description :</p><p>ContactBean:</p><table><thead><tr><th>value</th><th>value type</th><th>value description</th></tr></thead><tbody><tr><td>id</td><td>int</td><td>The contact id</td></tr><tr><td>width</td><td>int</td><td>The contact avatar width</td></tr><tr><td>height</td><td>int</td><td>The contact avatar height</td></tr><tr><td>address</td><td>int</td><td>The contact address</td></tr><tr><td>name</td><td>String</td><td>The contact name</td></tr><tr><td>number</td><td>String</td><td>The contact phone number</td></tr><tr><td>avatar</td><td>Uint8List?</td><td>The contact avatar</td></tr></tbody></table><p>Precautions:</p><ul><li>The Uint8List? type is a picture type, interacts with the backend, and converts it to a bitmap type at the backend.</li><li>Contacts sent to the watch face, must have an avatar.</li><li>id has size limit. The maximum value of id can be viewed through count in the return value of _blePlugin.checkSupportQuickContact, and cannot be greater than or equal to the queried value.</li></ul><h2 id="sets-contact-avatar-information" tabindex="-1"><a class="header-anchor" href="#sets-contact-avatar-information" aria-hidden="true">#</a> Sets contact avatar information</h2><p>Sets the contact avatar , the result is obtained through contactAvatarEveStm.</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>_blePlugin<span class="token punctuation">.</span><span class="token function">sendContactAvatar</span><span class="token punctuation">(</span><span class="token class-name">ContactBean</span> info<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="delete-contacts-information" tabindex="-1"><a class="header-anchor" href="#delete-contacts-information" aria-hidden="true">#</a> Delete contacts information</h2><p>Delete contact information based on contact id.</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>_blePlugin<span class="token punctuation">.</span><span class="token function">deleteContact</span><span class="token punctuation">(</span>int id<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="delete-contacts-avatar-information" tabindex="-1"><a class="header-anchor" href="#delete-contacts-avatar-information" aria-hidden="true">#</a> Delete contacts avatar information</h2><p>Delete contact avatar information based on contact id.</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>_blePlugin<span class="token punctuation">.</span><span class="token function">deleteContactAvatar</span><span class="token punctuation">(</span>int id<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="clear-contacts-information" tabindex="-1"><a class="header-anchor" href="#clear-contacts-information" aria-hidden="true">#</a> clear contacts information</h2><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>_blePlugin<span class="token punctuation">.</span><span class="token function">clearContact</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,43),o=[c];function i(p,d){return t(),n("div",null,o)}var l=a(e,[["render",i],["__file","index.html.vue"]]);export{l as default};
