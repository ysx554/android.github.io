import{_ as s,o as e,c as n,e as a}from"./app.2d594a2a.js";const t={},o=a(`<h1 id="blood-pressure" tabindex="-1"><a class="header-anchor" href="#blood-pressure" aria-hidden="true">#</a> Blood Pressure</h1><h2 id="sets-blood-pressure-listener" tabindex="-1"><a class="header-anchor" href="#sets-blood-pressure-listener" aria-hidden="true">#</a> Sets blood pressure listener</h2><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>       _blePlugin<span class="token punctuation">.</span>bloodPressureEveStm<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span>
        <span class="token punctuation">(</span><span class="token class-name">BloodPressureBean</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token comment">/// Do something with new state,for example:</span>
          <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">switch</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">case</span> <span class="token class-name">BloodPressureType</span><span class="token punctuation">.</span>continueState<span class="token punctuation">:</span>
                _continueState <span class="token operator">=</span> event<span class="token punctuation">.</span>continueState<span class="token operator">!</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
              <span class="token keyword">case</span> <span class="token class-name">BloodPressureType</span><span class="token punctuation">.</span>pressureChange<span class="token punctuation">:</span>
                _bean <span class="token operator">=</span> event<span class="token punctuation">.</span>pressureChange<span class="token operator">!</span><span class="token punctuation">;</span>
                _systolicBloodPressure <span class="token operator">=</span> _bean<span class="token operator">!</span><span class="token punctuation">.</span>sbp<span class="token operator">!</span><span class="token punctuation">;</span>
                _diastolicBloodPressure <span class="token operator">=</span> _bean<span class="token operator">!</span><span class="token punctuation">.</span>dbp<span class="token operator">!</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
              <span class="token keyword">case</span> <span class="token class-name">BloodPressureType</span><span class="token punctuation">.</span>historyList<span class="token punctuation">:</span>
                _historyBpList <span class="token operator">=</span> event<span class="token punctuation">.</span>historyBpList<span class="token operator">!</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
              <span class="token keyword">case</span> <span class="token class-name">BloodPressureType</span><span class="token punctuation">.</span>continueBP<span class="token punctuation">:</span>
                info <span class="token operator">=</span> event<span class="token punctuation">.</span>continueBp<span class="token operator">!</span><span class="token punctuation">;</span>
                _startTime <span class="token operator">=</span> info<span class="token operator">!</span><span class="token punctuation">.</span>startTime<span class="token operator">!</span><span class="token punctuation">;</span>
                _timeInterval <span class="token operator">=</span> info<span class="token operator">!</span><span class="token punctuation">.</span>timeInterval<span class="token operator">!</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
              <span class="token keyword">default</span><span class="token punctuation">:</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Callback Description(event):</p><p>BloodPressureBean\uFF1A</p><table><thead><tr><th>callback value</th><th>callback value type</th><th>callback value description</th></tr></thead><tbody><tr><td>type</td><td>int</td><td>Get the corresponding return value according to type, where type is the value corresponding to BloodPressureType</td></tr><tr><td>continueState</td><td>bool</td><td>Continue to display blood pressure status</td></tr><tr><td>pressureChange</td><td>BloodPressureChangeBean</td><td>Obtain the current diastolic and systolic blood pressure</td></tr><tr><td>historyBPList</td><td>List&lt; HistoryBloodPressureBean &gt;</td><td>historical blood pressure</td></tr><tr><td>continueBP</td><td>BloodPressureInfo</td><td>24 hour blood pressure</td></tr></tbody></table><p>BloodPressureType:</p><table><thead><tr><th>type</th><th>value</th><th>value description</th></tr></thead><tbody><tr><td>continueState</td><td>1</td><td>Query continue blood pressure state</td></tr><tr><td>pressureChange</td><td>2</td><td>Stop measuring blood pressure and return the high and low pressure values</td></tr><tr><td>historyList</td><td>3</td><td>Query history once blood pressure</td></tr><tr><td>continueBP</td><td>4</td><td>Query last 24 hour blood pressure</td></tr></tbody></table><p>BloodPressureChangeBean\uFF1A</p><table><thead><tr><th>callback value</th><th>callback value type</th><th>callback value description</th></tr></thead><tbody><tr><td>sbp</td><td>int</td><td>Systolic blood pressure</td></tr><tr><td>dbp</td><td>int</td><td>Diastolic blood pressure</td></tr></tbody></table><p>HistoryBloodPressureBean:</p><table><thead><tr><th>callback value</th><th>callback value type</th><th>callback value description</th></tr></thead><tbody><tr><td>date</td><td>String</td><td>date of measurement</td></tr><tr><td>sbp</td><td>int</td><td>systolic blood pressure</td></tr><tr><td>dbp</td><td>int</td><td>diastolic blood pressure</td></tr></tbody></table><p>BloodPressureInfo:</p><table><thead><tr><th>callback value</th><th>callback value type</th><th>callback value description</th></tr></thead><tbody><tr><td>startTime</td><td>int</td><td>Start measuring time</td></tr><tr><td>timeInterval</td><td>int</td><td>Intervals</td></tr></tbody></table><h2 id="measuring-blood-pressure" tabindex="-1"><a class="header-anchor" href="#measuring-blood-pressure" aria-hidden="true">#</a> Measuring blood pressure</h2><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>_blePlugin<span class="token punctuation">.</span>startMeasureBloodPressure<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="stop-measuring-blood-pressure" tabindex="-1"><a class="header-anchor" href="#stop-measuring-blood-pressure" aria-hidden="true">#</a> Stop measuring blood pressure</h2><p>Stop measuring blood pressure, too short a measurement time will result in no measurement results.</p><p>The measurement results are monitored through the bloodPressureEveStm data stream, and the returned high and low pressure values are stored in BloodPressureBean.bloodPressureChange and BloodPressureBean.bloodPressureChange1, respectively,type is pressureChange.</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>_blePlugin<span class="token punctuation">.</span>stopMeasureBloodPressure<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="enable-continue-blood-pressure" tabindex="-1"><a class="header-anchor" href="#enable-continue-blood-pressure" aria-hidden="true">#</a> Enable continue blood pressure</h2><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>_blePlugin<span class="token punctuation">.</span>enableContinueBloodPressure<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="disable-continue-blood-pressure" tabindex="-1"><a class="header-anchor" href="#disable-continue-blood-pressure" aria-hidden="true">#</a> Disable continue blood pressure</h2><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>_blePlugin<span class="token punctuation">.</span>disableContinueBloodPressure<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="gets-continue-blood-pressure-state" tabindex="-1"><a class="header-anchor" href="#gets-continue-blood-pressure-state" aria-hidden="true">#</a> Gets continue blood pressure state</h2><p>The measurement results are monitored through the bloodPressureEveStmdata stream, and the continue blood pressure state is stored in BloodPressureBean.continueState,type is continueState.</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>_blePlugin<span class="token punctuation">.</span>queryContinueBloodPressureState<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="gets-last-24-hour-blood-pressure" tabindex="-1"><a class="header-anchor" href="#gets-last-24-hour-blood-pressure" aria-hidden="true">#</a> Gets last 24 hour blood pressure</h2><p>The measurement results are monitored through the bloodPressureEveStmdata stream, and the last 24 hour blood pressure is stored in BloodPressureBean.continueBP,type is continueBP.</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>_blePlugin<span class="token punctuation">.</span>queryLast24HourBloodPressure<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="gets-history-once-blood-pressure" tabindex="-1"><a class="header-anchor" href="#gets-history-once-blood-pressure" aria-hidden="true">#</a> Gets history once blood pressure</h2><p>The measurement results are monitored through the bloodPressureEveStmdata stream, and the history once blood pressure is stored in BloodPressureBean.historyBPList,type is historyList.</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>_blePlugin<span class="token punctuation">.</span>queryHistoryBloodPressure<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,33),r=[o];function d(l,p){return e(),n("div",null,r)}var u=s(t,[["render",d],["__file","index.html.vue"]]);export{u as default};
