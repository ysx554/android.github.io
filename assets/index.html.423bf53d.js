import{_ as e,o as n,c as a,e as s}from"./app.2d594a2a.js";const t={},i=s(`<h1 id="rssi-only-android-support" tabindex="-1"><a class="header-anchor" href="#rssi-only-android-support" aria-hidden="true">#</a> RSSI&lt; Only android support &gt;</h1><h2 id="sets-rssi-listener" tabindex="-1"><a class="header-anchor" href="#sets-rssi-listener" aria-hidden="true">#</a> Sets RSSI listener</h2><p>Set up an RSSI listener deviceRssiEveStm, which returns the RSSI value through the data stream.</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>_blePlugin<span class="token punctuation">.</span>deviceRssiEveStm<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span>int event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/// Do something with new state</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="read-the-watch-rssi" tabindex="-1"><a class="header-anchor" href="#read-the-watch-rssi" aria-hidden="true">#</a> Read the watch RSSI</h2><p>Read the real-time RSSI value of the watch. The query result will be obtained through the deviceRssiEveStm listening stream.</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>_blePlugin<span class="token punctuation">.</span>readDeviceRssi<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,7),r=[i];function d(c,l){return n(),a("div",null,r)}var u=e(t,[["render",d],["__file","index.html.vue"]]);export{u as default};
