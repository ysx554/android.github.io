import{_ as t,o as a,c as e,e as n}from"./app.2d594a2a.js";const s={},d=n(`<h1 id="watchface" tabindex="-1"><a class="header-anchor" href="#watchface" aria-hidden="true">#</a> Watchface</h1><h2 id="sets-watchface-index" tabindex="-1"><a class="header-anchor" href="#sets-watchface-index" aria-hidden="true">#</a> Sets watchface index</h2><p>The watch supports a variety of different watchfaces, which can be switched freely.</p><p>Send watchface type,Parameters provided by WatchFaceType.</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>_blePlugin<span class="token punctuation">.</span><span class="token function">sendDisplayWatchFace</span><span class="token punctuation">(</span><span class="token class-name">WatchFaceType</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>WatchFaceType:</p><table><thead><tr><th>value</th><th>value type</th><th>value description</th></tr></thead><tbody><tr><td>firstWatchFace</td><td>int</td><td>0x01</td></tr><tr><td>secondWatchFace</td><td>int</td><td>0x02</td></tr><tr><td>thirdWatchFace</td><td>int</td><td>0x03</td></tr></tbody></table><h2 id="gets-the-watchface" tabindex="-1"><a class="header-anchor" href="#gets-the-watchface" aria-hidden="true">#</a> Gets the watchface</h2><p>Gets the watchface being displayed.</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>int watchFace <span class="token operator">=</span> <span class="token keyword">await</span> _blePlugin<span class="token punctuation">.</span>queryDisplayWatchFace<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="gets-the-watchface-layout" tabindex="-1"><a class="header-anchor" href="#gets-the-watchface-layout" aria-hidden="true">#</a> Gets the watchface layout</h2><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token class-name">WatchFaceLayoutBean</span> info <span class="token operator">=</span> <span class="token keyword">await</span> _blePlugin<span class="token punctuation">.</span>queryWatchFaceLayout<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Parameter Description :</p><p>WatchFaceLayoutBean\uFF1A</p><table><thead><tr><th>value</th><th>value type</th><th>value description</th></tr></thead><tbody><tr><td>backgroundPictureMd5</td><td>String</td><td>The background image MD5 has a length of 32 bits. When padded with 0, the background image restores the default background.</td></tr><tr><td>compressionType</td><td>String</td><td>The compression type(LZO,RGB_DEDUPLICATION,RGB_LINE, ORIGINAL)</td></tr><tr><td>height</td><td>int</td><td>The watch face height default 240 px.</td></tr><tr><td>textColor</td><td>int</td><td>font color(RGB)</td></tr><tr><td>thumHeight</td><td>int</td><td>The thum watch face height,The default is 0, which means it is not supported</td></tr><tr><td>thumWidth</td><td>int</td><td>The thum watch face width,The default is 0, which means it is not supported</td></tr><tr><td>timeBottomContent</td><td>int</td><td>content displayed</td></tr><tr><td>timePosition</td><td>int</td><td>time position</td></tr><tr><td>timeTopContent</td><td>int</td><td>content</td></tr><tr><td>width</td><td>int</td><td>The watch face width default 240 px.</td></tr></tbody></table><p>WatchFaceLayoutType:</p><table><thead><tr><th>value</th><th>value type</th><th>value description</th></tr></thead><tbody><tr><td>watchFaceTimeTop</td><td>int</td><td>Time is at the top right</td></tr><tr><td>watchFaceTimeBottom</td><td>int</td><td>Time is at the bottom right</td></tr><tr><td>watchFaceContentclose</td><td>int</td><td>Do not display anything</td></tr><tr><td>watchFaceContentDate</td><td>int</td><td>Date</td></tr><tr><td>watchFaceContentSleep</td><td>int</td><td>Sleep</td></tr><tr><td>watchFaceContentHeartRate</td><td>int</td><td>Heart Rate</td></tr><tr><td>watchFaceContentStep</td><td>int</td><td>Steps</td></tr></tbody></table><h2 id="sets-the-watchface-layout" tabindex="-1"><a class="header-anchor" href="#sets-the-watchface-layout" aria-hidden="true">#</a> Sets the watchface layout</h2><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>_blePlugin<span class="token punctuation">.</span><span class="token function">sendWatchFaceLayout</span><span class="token punctuation">(</span><span class="token class-name">WatchFaceLayoutBean</span> info<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="sets-watchface-background-listener" tabindex="-1"><a class="header-anchor" href="#sets-watchface-background-listener" aria-hidden="true">#</a> Sets watchface background Listener</h2><p>Sets up a watchface background transmission monitor fileTransEveStm, and save the returned value in &quot;event&quot; with the value of the FileTransBean object.</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>_blePlugin<span class="token punctuation">.</span>fileTransEveStm<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span>
      <span class="token punctuation">(</span><span class="token class-name">FileTransBean</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token comment">/// Do something with new state,for example:</span>
        <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">switch</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token class-name">TransType</span><span class="token punctuation">.</span>transStart<span class="token punctuation">:</span>
              <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token class-name">TransType</span><span class="token punctuation">.</span>transChanged<span class="token punctuation">:</span>
              _progress <span class="token operator">=</span> event<span class="token punctuation">.</span>progress<span class="token operator">!</span><span class="token punctuation">;</span>
              <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token class-name">TransType</span><span class="token punctuation">.</span>transCompleted<span class="token punctuation">:</span>
              <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token class-name">TransType</span><span class="token punctuation">.</span>error<span class="token punctuation">:</span>
              _error <span class="token operator">=</span> event<span class="token punctuation">.</span>error<span class="token operator">!</span><span class="token punctuation">;</span>
              <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">default</span><span class="token punctuation">:</span>
              <span class="token keyword">break</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Callback Description(event):</p><p>FileTransBean\uFF1A</p><table><thead><tr><th>callback value</th><th>callback value type</th><th>callback value description</th></tr></thead><tbody><tr><td>type</td><td>int</td><td>Weather change return value type, the type is TransType</td></tr><tr><td>isError</td><td>bool</td><td>Determine whether the dial background transmission is wrong</td></tr><tr><td>progress</td><td>int</td><td>Dial background transfer progress</td></tr></tbody></table><p>TransType\uFF1A</p><table><thead><tr><th>type</th><th>value</th><th>value description</th></tr></thead><tbody><tr><td>transStart</td><td>1</td><td>Indicates that the dial background is obtained and the data returned by the monitor is transmitted</td></tr><tr><td>transChanged</td><td>2</td><td>Retrieves the data returned by the dial background transmission monitor</td></tr><tr><td>transCompleted</td><td>3</td><td>It means to obtain the data returned by monitoring the dial background after transmission</td></tr><tr><td>error</td><td>4</td><td>Indicates dial background transmission error listening for returned data</td></tr></tbody></table><h2 id="sets-the-watchface-background" tabindex="-1"><a class="header-anchor" href="#sets-the-watchface-background" aria-hidden="true">#</a> Sets the watchface background</h2><p>The dial of the 1.3-inch color screen supports the replacement of the background image with a picture size of 240 * 240 px. Compressed indicates whether the picture needs to be compressed (the watch with the master control of 52840 does not support compression and is fixed to false); timeout indicates the timeout period, in seconds. The progress is called back by _blePlugin.fileTransEveStm.listen.</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>_blePlugin<span class="token punctuation">.</span><span class="token function">sendWatchFaceBackground</span><span class="token punctuation">(</span><span class="token class-name">WatchFaceBackgroundBean</span> info<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Parameter Description :</p><p>WatchFaceBackgroundBean:</p><table><thead><tr><th>callback value</th><th>callback value type</th><th>callback value description</th></tr></thead><tbody><tr><td>bitmap</td><td>Uint8List</td><td>The bitmap of background image</td></tr><tr><td>thumbBitmap</td><td>Uint8List</td><td>The bitmap of thumbnail</td></tr><tr><td>type</td><td>String</td><td>WatchFaceLayoutBean.WatchFaceLayoutType</td></tr><tr><td>thumbWidth</td><td>int</td><td>width of thumbBitmap</td></tr><tr><td>thumbHeight</td><td>int</td><td>height of thumbBitmap</td></tr><tr><td>width</td><td>int</td><td>width of bitmap</td></tr><tr><td>height</td><td>int</td><td>height of bitmap</td></tr></tbody></table><h2 id="gets-support-watchface-type" tabindex="-1"><a class="header-anchor" href="#gets-support-watchface-type" aria-hidden="true">#</a> Gets support watchface type</h2><p>When the watch switches dials, it needs to query the type supported by the dial.</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token class-name">SupportWatchFaceBean</span> info <span class="token operator">=</span> <span class="token keyword">await</span> _blePlugin<span class="token punctuation">.</span>querySupportWatchFace<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>callback description\uFF1A</p><p>SupportWatchFaceBean:</p><table><thead><tr><th>displayWatchFace</th><th>supportWatchFaceList</th></tr></thead><tbody><tr><td>The currently displayed dial number</td><td>Types of watch faces</td></tr></tbody></table><h2 id="gets-the-watchface-store" tabindex="-1"><a class="header-anchor" href="#gets-the-watchface-store" aria-hidden="true">#</a> Gets the watchface store</h2><p>According to the watchface type supported by the watch, obtain a list of watchfaces that the watch can be replaced.</p><p>Gets the list of available watch faces by way of paging query.</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">WatchFaceBean</span><span class="token punctuation">&gt;</span></span> listInfo<span class="token operator">=</span> <span class="token keyword">await</span> _blePlugin<span class="token punctuation">.</span><span class="token function">queryWatchFaceStore</span><span class="token punctuation">(</span><span class="token class-name">WatchFaceStoreBean</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>WatchFaceStoreBean :</p><table><thead><tr><th>value</th><th>value type</th><th>value description</th></tr></thead><tbody><tr><td>watchFaceSupportList</td><td>List&lt; int &gt;</td><td>watchface support type</td></tr><tr><td>firmwareVersion</td><td>String</td><td>Dial firmware version number</td></tr><tr><td>pageCount</td><td>int</td><td>Number of watch faces per page</td></tr><tr><td>pageIndex</td><td>int</td><td>current page number</td></tr></tbody></table><p>Precautions:</p><p>watchFaceSupportList:parameters are obtained by the _blePlugin.querySupportWatchFace.</p><p>firmwareVersion:Get the firmware version number through _blePlugin.queryFirmwareVersion.</p><h2 id="gets-the-watchface-information-of-the-watchface-id" tabindex="-1"><a class="header-anchor" href="#gets-the-watchface-information-of-the-watchface-id" aria-hidden="true">#</a> Gets the watchface information of the watchface id</h2><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token class-name">WatchFaceIdBean</span> info <span class="token operator">=</span> <span class="token keyword">await</span> _blePlugin<span class="token punctuation">.</span><span class="token function">queryWatchFaceOfID</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Parameter Description :</p><p>WatchFaceIdBean:</p><table><thead><tr><th>value</th><th>value type</th><th>value description</th></tr></thead><tbody><tr><td>id</td><td>int</td><td>The information of the dial is obtained by the id of the dial, and the parameters are obtained by the _blePlugin.queryDisplayWatchFace</td></tr></tbody></table><p>callback description\uFF1A</p><p>WatchFaceIdBean:</p><table><thead><tr><th>callback value</th><th>callback value type</th><th>callback value description</th></tr></thead><tbody><tr><td>watchFace</td><td>WatchFace</td><td>watch face file</td></tr><tr><td>error</td><td>String</td><td>error message</td></tr><tr><td>code</td><td>int</td><td>return code</td></tr></tbody></table><p>WatchFace:</p><table><thead><tr><th>value</th><th>value type</th><th>value description</th></tr></thead><tbody><tr><td>id</td><td>int</td><td>file id</td></tr><tr><td>preview</td><td>String</td><td>Watchface Image preview link</td></tr><tr><td>file</td><td>String</td><td>Watchface file download link</td></tr></tbody></table><h2 id="sets-watchface-file-listener" tabindex="-1"><a class="header-anchor" href="#sets-watchface-file-listener" aria-hidden="true">#</a> Sets watchface file listener</h2><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>      _blePlugin<span class="token punctuation">.</span>wfFileTransEveStm<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span>
        <span class="token punctuation">(</span><span class="token class-name">FileTransBean</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">/// Do something with new state,for example:</span>
          <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">switch</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">case</span> <span class="token class-name">TransType</span><span class="token punctuation">.</span>transStart<span class="token punctuation">:</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
              <span class="token keyword">case</span> <span class="token class-name">TransType</span><span class="token punctuation">.</span>transChanged<span class="token punctuation">:</span>
                _progress <span class="token operator">=</span> event<span class="token punctuation">.</span>progress<span class="token operator">!</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
              <span class="token keyword">case</span> <span class="token class-name">TransType</span><span class="token punctuation">.</span>transCompleted<span class="token punctuation">:</span>
                _progress <span class="token operator">=</span> event<span class="token punctuation">.</span>progress<span class="token operator">!</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
              <span class="token keyword">case</span> <span class="token class-name">TransType</span><span class="token punctuation">.</span>error<span class="token punctuation">:</span>
                _error <span class="token operator">=</span> event<span class="token punctuation">.</span>error<span class="token operator">!</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
              <span class="token keyword">default</span><span class="token punctuation">:</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Callback Description(event):</p><p>FileTransBean\uFF1A</p><table><thead><tr><th>callback value</th><th>callback value type</th><th>callback value description</th></tr></thead><tbody><tr><td>type</td><td>int</td><td>Weather change return value type, the type is TransType</td></tr><tr><td>isError</td><td>bool</td><td>Check whether the dial file transfer is incorrect</td></tr><tr><td>progress</td><td>int</td><td>Dial file transfer progress</td></tr></tbody></table><p>TransType\uFF1A</p><table><thead><tr><th>type</th><th>value</th><th>value description</th></tr></thead><tbody><tr><td>transStart</td><td>1</td><td>Retrieves the dial file and begins transmitting the data returned by the listener</td></tr><tr><td>transChanged</td><td>2</td><td>Retrieves the data returned by the dial file transfer listener</td></tr><tr><td>transCompleted</td><td>3</td><td>Indicates that the data returned after the dial file transfer is completed</td></tr><tr><td>error</td><td>4</td><td>Indicates a dial file transfer error listening for returned data</td></tr></tbody></table><h2 id="sets-a-watchface-file" tabindex="-1"><a class="header-anchor" href="#sets-a-watchface-file" aria-hidden="true">#</a> Sets a watchface file</h2><p>Send the watchface file of the new watchface to the watch, during which the watch will restart.</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>_blePlugin<span class="token punctuation">.</span><span class="token function">sendWatchFace</span><span class="token punctuation">(</span><span class="token class-name">SendWatchFaceBean</span> bean<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Parameter Description :</p><p>SendWatchFaceBean:</p><table><thead><tr><th>value</th><th>value type</th><th>value description</th></tr></thead><tbody><tr><td>watchFaceFlutterBean</td><td>CustomizeWatchFaceBean</td><td>Dial file information</td></tr><tr><td>timeout</td><td>int</td><td>The dial file transfer timed out</td></tr></tbody></table><p>CustomizeWatchFaceBean:</p><table><thead><tr><th>value</th><th>value type</th><th>value description</th></tr></thead><tbody><tr><td>index</td><td>int</td><td>file id</td></tr><tr><td>file</td><td>String</td><td>The address where the watch face file is stored</td></tr></tbody></table>`,73),c=[d];function i(r,p){return a(),e("div",null,c)}var l=t(s,[["render",i],["__file","index.html.vue"]]);export{l as default};
