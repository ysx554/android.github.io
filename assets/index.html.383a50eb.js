import{_ as a,o as n,c as e,e as s}from"./app.2d594a2a.js";const t={},c=s(`<h1 id="ecg" tabindex="-1"><a class="header-anchor" href="#ecg" aria-hidden="true">#</a> ECG</h1><h2 id="sets-ecg-listener" tabindex="-1"><a class="header-anchor" href="#sets-ecg-listener" aria-hidden="true">#</a> Sets ECG listener</h2><p>Sets the ECG monitor and get the return value through ecgEveStm.</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>_blePlugin<span class="token punctuation">.</span>ecgEveStm<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span>
        <span class="token punctuation">(</span><span class="token class-name">EgcBean</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
             <span class="token comment">/// Do something with new state,for example:</span>
          <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">switch</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">case</span> <span class="token class-name">ECGType</span><span class="token punctuation">.</span>ecgChangeInts<span class="token punctuation">:</span>
                _ints <span class="token operator">=</span> event<span class="token punctuation">.</span>ints<span class="token operator">!</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
              <span class="token keyword">case</span> <span class="token class-name">ECGType</span><span class="token punctuation">.</span>measureComplete<span class="token punctuation">:</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
              <span class="token keyword">case</span> <span class="token class-name">ECGType</span><span class="token punctuation">.</span>date<span class="token punctuation">:</span>
                _date <span class="token operator">=</span> event<span class="token punctuation">.</span>date<span class="token operator">!</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
              <span class="token keyword">case</span> <span class="token class-name">ECGType</span><span class="token punctuation">.</span>cancel<span class="token punctuation">:</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
              <span class="token keyword">case</span> <span class="token class-name">ECGType</span><span class="token punctuation">.</span>fail<span class="token punctuation">:</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Callback Description(event):</p><p>EgcBean:</p><table><thead><tr><th>callback value</th><th>callback value type</th><th>callback value description</th></tr></thead><tbody><tr><td>type</td><td>int</td><td>Get the corresponding return value according to type, where type is the value corresponding to ECGType</td></tr><tr><td>ints</td><td>int[]</td><td>ECG information</td></tr><tr><td>date</td><td>Date</td><td>date</td></tr></tbody></table><p>ECGType:</p><table><thead><tr><th>type</th><th>value</th><th>value description</th></tr></thead><tbody><tr><td>ecgChangeInts</td><td>1</td><td>measure ECG</td></tr><tr><td>measureComplete</td><td>2</td><td>ECG measurement complete</td></tr><tr><td>date</td><td>3</td><td>ECG measurement date</td></tr><tr><td>cancel</td><td>4</td><td>ECG measurement off</td></tr><tr><td>fail</td><td>5</td><td>ECG measurement failed</td></tr></tbody></table><h2 id="measuring-ecg" tabindex="-1"><a class="header-anchor" href="#measuring-ecg" aria-hidden="true">#</a> Measuring ECG</h2><p>Start to measure the ECG, the ECG measurement time is 30 seconds, and the user needs to touch the left and right electrodes of the watch with both hands. The value is obtained by listening to the ecgEveStm data stream, and the value is saved in EgcBean.ints,type is ecgChangeInts.</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>_blePlugin<span class="token punctuation">.</span>startECGMeasure<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="stop-measuring-ecg" tabindex="-1"><a class="header-anchor" href="#stop-measuring-ecg" aria-hidden="true">#</a> Stop measuring ECG</h2><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>_blePlugin<span class="token punctuation">.</span>stopECGMeasure<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="detect-new-ecg-measurement-methods" tabindex="-1"><a class="header-anchor" href="#detect-new-ecg-measurement-methods" aria-hidden="true">#</a> Detect new ECG measurement methods</h2><p>In the new measurement mode, the watch can save the last unsent measurement result; the old version does not.</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>bool newMeasurementVersion <span class="token operator">=</span> <span class="token keyword">await</span> _blePlugin<span class="token punctuation">.</span>isNewECGMeasurementVersion<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="gets-the-last-ecg-data" tabindex="-1"><a class="header-anchor" href="#gets-the-last-ecg-data" aria-hidden="true">#</a> Gets the last ECG data</h2><p>Gets the ECG data saved by the watch, monitor the data stream through ecgEveStm , and save the value in EgcBean.ints,type is ecgChangeInts.</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>_blePlugin<span class="token punctuation">.</span>queryLastMeasureECGData<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="sets-heart-rate-during-ecg-measurement" tabindex="-1"><a class="header-anchor" href="#sets-heart-rate-during-ecg-measurement" aria-hidden="true">#</a> Sets heart rate during ECG measurement</h2><p>Using the measured data, the instantaneous heart rate is calculated through the ECG algorithm library and sent to the watch.</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>_blePlugin<span class="token punctuation">.</span><span class="token function">sendECGHeartRate</span><span class="token punctuation">(</span>int heartRate<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,23),i=[c];function d(p,l){return n(),e("div",null,i)}var r=a(t,[["render",d],["__file","index.html.vue"]]);export{r as default};
